import whisper
import sounddevice as sd
import numpy as np
import pyttsx3
import tkinter as tk
from threading import Thread
import webbrowser as web
import pyperclip

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
DURATION = 3
SAMPLERATE = 32000
CHANNELS = 1

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª—ñ
model = whisper.load_model("base")  # –ú–æ–∂–Ω–∞ "tiny" –∞–±–æ "small" –¥–ª—è —à–≤–∏–¥–∫–æ—Å—Ç—ñ
engine = pyttsx3.init()
engine.setProperty("rate", 160)

last_text = ""

# –ó–∞–ø–∏—Å –∞—É–¥—ñ–æ
def record_audio():
    print("üéß –ó–∞–ø–∏—Å—É—î–º–æ...")
    audio = sd.rec(int(DURATION * SAMPLERATE), samplerate=SAMPLERATE, channels=CHANNELS, dtype='float32')
    sd.wait()
    return audio

# –†–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è –≥–æ–ª–æ—Å—É
def transcribe(audio):
    print("üß† –†–æ–∑–ø—ñ–∑–Ω–∞—î–º–æ –º–æ–≤–ª–µ–Ω–Ω—è...")
    audio = np.squeeze(audio)
    result = model.transcribe(audio, language="uk")
    return result["text"]

# –í–∏–º–æ–≤–∞ –≥–æ–ª–æ—Å–æ–º
def speak(text):
    print("ü§ñ –í—ñ–¥–ø–æ–≤—ñ–¥—å:", text)
    engine.say(text)
    engine.runAndWait()

# –û—Å–Ω–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞
def process_audio():
    def task():
        audio = record_audio()
        text = transcribe(audio)
        print("üó£Ô∏è –°–ø—ñ–≤—Ä–æ–∑–º–æ–≤–Ω–∏–∫ —Å–∫–∞–∑–∞–≤:", text)
        label.config(text=f"üó£Ô∏è {text}")

        # –ú–æ–∂–Ω–∞ —Ç—É—Ç –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏ GPT –∞–±–æ —ñ–Ω—à—É –ª–æ–≥—ñ–∫—É
        response = f"–¢–∏ —Å–∫–∞–∑–∞–≤: {text}"
        speak(response)

    
    Thread(target=task).start()
    
def copy_and_open_chatgpt():
    if last_text:
        pyperclip.copy(last_text)
        web.open("https://chat.openai.com/")
    else :
        print("‚ùó –ù–µ–º–∞—î —Ç–µ–∫—Å—Ç—É –¥–ª—è –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è.")

# GUI
def create_gui():
    global label
    root = tk.Tk()
    root.title("üéôÔ∏è –ì–æ–ª–æ—Å–æ–≤–∏–π –∞—Å–∏—Å—Ç–µ–Ω—Ç")
    root.geometry("400x250")

    label = tk.Label(root, text="–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø–∏—Å—É –≥–æ–ª–æ—Å—É", wraplength=300)
    label.pack(pady=20)

    record_button = tk.Button(root, text="üéß –ó–∞–ø–∏—Å–∞—Ç–∏", command=process_audio)
    record_button.pack(pady=10)
    
    copy_button = tk.Button(root, text="üìã –ö–æ–ø—ñ—é–≤–∞—Ç–∏ —Ç–µ–∫—Å—Ç", command=copy_and_open_chatgpt)
    copy_button.pack(pady=10)

    root.mainloop()
    
if __name__ == "__main__":
    create_gui()
